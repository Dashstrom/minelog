{
  // Don't format on save for formatters we don't explicitely control
  "editor.formatOnSave": false,
  "editor.codeActionsOnSave": {
    "source.fixAll": "always"
  },
  // Set file associations to support comments syntax highlight
  "files.associations": {
    "settings.json": "jsonc",
    "extensions.json": "jsonc",
    "LICENSE": "txt"
  },
  // Files to exclude
  "files.exclude": {
    ".bzr": true,
    ".direnv": true,
    ".eggs": true,
    ".git": true,
    ".hg": true,
    ".mypy_cache": true,
    ".nox": true,
    ".pants.d": true,
    ".pytype": true,
    ".ruff_cache": true,
    ".pytest_cache": true,
    ".svn": true,
    ".tox": true,
    ".venv": true,
    "__pypackages__": true,
    "_build": true,
    "buck-out": true,
    "build": true,
    "dist": true,
    "node_modules": true,
    "venv": true
  },
  // Conventional rulers for python
  "editor.rulers": [72, 79, 120],
  "ruff.fixAll": true,
  // Conflict between Ruff and isort
  "ruff.organizeImports": false,
  "evenBetterToml.formatter.alignComments": false,
  "evenBetterToml.formatter.alignEntries": false,
  "evenBetterToml.formatter.allowedBlankLines": 1,
  "evenBetterToml.formatter.arrayAutoCollapse": true,
  "evenBetterToml.formatter.arrayAutoExpand": true,
  "evenBetterToml.formatter.arrayTrailingComma": true,
  "evenBetterToml.formatter.columnWidth": 79,
  "evenBetterToml.formatter.compactArrays": true,
  "evenBetterToml.formatter.compactEntries": false,
  "evenBetterToml.formatter.compactInlineTables": false,
  "evenBetterToml.formatter.indentEntries": false,
  "evenBetterToml.formatter.indentTables": false,
  "evenBetterToml.formatter.inlineTableExpand": false,
  "evenBetterToml.formatter.reorderArrays": true,
  "evenBetterToml.formatter.trailingNewline": true,
  // We like keeping TOML keys in a certain non-alphabetical order that feels more natural
  "evenBetterToml.formatter.reorderKeys": false,
  "redhat.telemetry.enabled": false,
  "ltex.language": "en",
  "cSpell.language": "en",
  "cSpell.words": [
    "anyio",
    "automodule",
    "autouse",
    "bysource",
    "docstrings",
    "genindex",
    "modindex",
    "mypy",
    "sourcelink",
    "sphinxcontrib",
    "todos",
    "typehints",
    "undoc",
    "viewcode",
    "doctest",
    "noqa",
    "webbrowser",
    "commitizen",
    "levelname",
    "caplog",
    "parseable",
    "pypi",
    "Dashstrom",
    "minelog"
  ]
}
