# ----------------------------------------------------------------------
# Packaging :
# https://packaging.python.org/en/latest/tutorials/packaging-projects
# ----------------------------------------------------------------------

[build-system]
requires = [
    "setuptools>=67.0.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "minelog"
description = "Script for find somethings easily in your minecraft logs."
readme = "README.rst"
requires-python = ">=3.6"
license.file = "LICENSE"
authors = [
  { name="Dashstrom", email="dashstrom.pro@gmail.com" },
]
maintainers  = [
  { name="Dashstrom", email="dashstrom.pro@gmail.com" },
]
keywords = [
  "python"
]
classifiers = [
  #"Development Status :: 1 - Planning",
  #"Development Status :: 2 - Pre-Alpha",
  "Development Status :: 3 - Alpha",
  #"Development Status :: 4 - Beta",
  #"Development Status :: 5 - Production/Stable",
  #"Development Status :: 6 - Mature",
  #"Development Status :: 7 - Inactive",

  "Environment :: Console",

  "Framework :: Pytest",
  "Framework :: Sphinx",
  "Framework :: tox",

  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",

  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",

  "Natural Language :: English",

  "Operating System :: OS Independent",

  "Programming Language :: Python",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",

  "Typing :: Typed"
]
dynamic = ["version", "dependencies"]

[project.urls]
Homepage = "https://github.com/Dashstrom/minelog"
Issues = "https://github.com/Dashstrom/minelog/issues"
Documentation = "https://github.com/Dashstrom/minelog"
Source = "https://github.com/Dashstrom/minelog"


[project.scripts]
minelog = "minelog.cli:minelog_cli"


# ----------------------------------------------------------------------
# Setuptools :
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# ----------------------------------------------------------------------

[tool.setuptools]
packages = ["minelog"]

[tool.setuptools.dynamic]
version = {attr = "minelog.info.__version__"}
dependencies = {file = ["requirements.txt"]}


# ----------------------------------------------------------------------
# Tox :
# https://pypi.org/project/tox
# ----------------------------------------------------------------------

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
envlist = lint,docs,test

[testenv:lint]
deps = -r requirements-lint.txt
commands =
  ruff check .
  black --diff .
  mypy .

[testenv:test]
deps = -r requirements-test.txt
commands =
  pytest

[testenv:docs]
deps = -r requirements-docs.txt
commands =
  sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/public
"""


# ----------------------------------------------------------------------
# Ruff :
# https://pypi.org/project/ruff
# ----------------------------------------------------------------------

[tool.ruff]
select = [
  "A", "B", "C", "D", "E", "F", "G", "I","N", "Q", "S", "T", "W", "ANN",
  "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN",
  "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI",
  "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"
]
# D203 and D211 are incompatible
# D212 and D213 are incompatible
# D400 [*] First line should end with a period
# T201 `print` found
# T203 `pprint` found
# ANN101 Missing type annotation for `self` in method
# D105 Missing docstring in magic method
# A003 Class attribute `compile` is shadowing a python builtin
ignore = ["D203", "D213", "T201", "T203", "ANN101", "D105", "A003"]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
line-length = 79
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py37"  # Doesn't support py36

[tool.ruff.per-file-ignores]
# E402 Module level import not at top of file
# INP001 File `docs\conf.py` is part of an implicit namespace package.
# A001 Variable `copyright` is shadowing a python builtin
# PTH100 `os.path.abspath()` should be replaced by `Path.resolve()`
"docs/conf.py" = ["E402", "INP001", "A001", "PTH100"]
# S101 Use of `assert` detected
# S603 `subprocess` call: check for execution of untrusted input
# S607 Starting a process with a partial executable path
"tests/*.py" = ["S101", "S603", "S607"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


# ----------------------------------------------------------------------
# Black :
# https://pypi.org/project/black
# ----------------------------------------------------------------------

[tool.black]
line-length = 79
target-version = ["py311", "py310", "py39", "py38", "py37", "py36"]


# ----------------------------------------------------------------------
# Mypy :
# https://pypi.org/project/mypy
# ----------------------------------------------------------------------

[tool.mypy]
python_version = 3.6
strict = true
show_error_codes = true
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
enable_error_code = ["ignore-without-code", "truthy-bool", "redundant-expr"]

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true

# Disallow untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# None and optional handling
no_implicit_optional = true

# Configuring warnings
warn_unused_ignores = false
warn_no_return = true
warn_return_any = true
warn_redundant_casts = true

# Misc things
strict_equality = true

# Config file
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["lxml"]
ignore_missing_imports = true
